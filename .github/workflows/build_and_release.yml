name: Build and Release Firmware

# Trigger the workflow on push events to the main branch
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build ESP-IDF Firmware
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up ESP-IDF environment
      - name: Set up ESP-IDF
        uses: espressif/esp-idf-action@v2.0

        with:
          version: 'latest'

      # Install required Python dependencies for ESP-IDF
      - name: Install ESP-IDF dependencies
        run: |
          python -m pip install --user -r requirements.txt

      # Build the firmware
      - name: Build firmware
        run: idf.py build

      # Upload firmware (.bin) as an artifact
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: build/your_firmware.bin  # Change this path to your actual .bin file location

  release:
    name: Release Firmware
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Download the artifact from the build step
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: firmware

      # Create a new release and upload firmware binary
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Firmware Release ${{ github.sha }}
          draft: false
          prerelease: false

      # Upload the binary to the release
      - name: Upload Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/your_firmware.bin  # Change this path to your actual .bin file location
          asset_name: firmware.bin
          asset_content_type: application/octet-stream
